//! Summary of the example IR used in the TPDE guide.
//!
//! The documentation includes a small SSA IR used to demonstrate how to
//! implement a TPDE back-end. The IR consists of functions containing basic
//! blocks which in turn hold instructions. Instructions are also values and may
//! be referenced by later instructions or phi nodes.
//!
//! Only 64-bit integer values exist in the example. Stack slots are created with
//! `alloca` instructions in the entry block. Control flow uses `br`, `condbr`
//! and `tbz` (test bit zero) instructions. Phi nodes unify values from multiple
//! predecessors at the start of each block.
//!
//! When translating the guide to Rust the IR references can be represented as
//! simple indices or newtype wrappers. The adaptor then exposes iterators over
//! functions, blocks, instructions and values based on these indices.
//!
//! The guide walks through building an adaptor for this IR, implementing the
//! required compiler hooks and finally replacing manual instruction selection
//! with snippet encoders generated by `tpde-encodegen`.
