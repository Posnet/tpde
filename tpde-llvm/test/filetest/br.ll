; NOTE: Assertions have been autogenerated by utils/update_tpde_llvm_test_checks.py UTC_ARGS: --tool tpde_llvm --default-march x86-64-v2 --filter-out "int3" --version 5
; SPDX-FileCopyrightText: 2024 Tobias Schwarz <tobias.schwarz@tum.de>
;
; SPDX-License-Identifier: LicenseRef-Proprietary

; RUN: tpde_llvm %s | llvm-objdump -d -r --no-show-raw-insn --symbolize-operands --no-addresses --x86-asm-syntax=intel --section=.text --section=.rodata - | FileCheck %s -check-prefixes=X64,CHECK --enable-var-scope --dump-input always


define i64 @br_simple1(i64 %0) {
; X64-LABEL: br_simple1>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    push rbx
; X64:    nop dword ptr [rax + rax]
; X64:    sub rsp, 0x10
; X64:    mov rbx, rdi
; X64:    mov rax, rbx
; X64:    add rsp, 0x10
; X64:    pop rbx
; X64:    pop rbp
; X64:    ret
; X64:    add byte ptr [rax], al
; X64:    add byte ptr [rax], al
entry:
  br label %block1
block1:
  ret i64 %0
}

define i64 @condbr0(i64 %0, i1 %1) {
; X64-LABEL: condbr0>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    push rbx
; X64:    nop dword ptr [rax + rax]
; X64:    sub rsp, 0x20
; X64:    mov rbx, rdi
; X64:    test esi, 0x1
; X64:    je <L0>
; X64:    mov rax, rbx
; X64:    add rsp, 0x20
; X64:    pop rbx
; X64:    pop rbp
; X64:    ret
; X64:  <L0>:
; X64:    lea rbx, [rbx + 0xa]
; X64:    mov rax, rbx
; X64:    add rsp, 0x20
; X64:    pop rbx
; X64:    pop rbp
; X64:    ret
; X64:     ...
; X64:    add byte ptr [rax], al
; X64:    add byte ptr [rbp + 0x48], dl
entry:
  br i1 %1, label %block1, label %block2
block1:
  ret i64 %0
block2:
  %2 = add i64 %0, 10
  ret i64 %2
}

define i64 @condbr1(i64 %0, i1 %1) {
; X64-LABEL: condbr1>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    push rbx
; X64:    nop dword ptr [rax + rax]
; X64:    sub rsp, 0x20
; X64:    mov rbx, rdi
; X64:    test esi, 0x1
; X64:    jne <L0>
; X64:    lea rax, [rbx + 0xa]
; X64:    add rsp, 0x20
; X64:    pop rbx
; X64:    pop rbp
; X64:    ret
; X64:  <L0>:
; X64:    mov rax, rbx
; X64:    add rsp, 0x20
; X64:    pop rbx
; X64:    pop rbp
; X64:    ret
; X64:     ...
; X64:    add byte ptr [rax], al
entry:
  br i1 %1, label %block1, label %block2
block2:
  %2 = add i64 %0, 10
  ret i64 %2
block1:
  ret i64 %0
}

;; NOTE: These prefixes are unused and the list is autogenerated. Do not add tests below this line:
; CHECK: {{.*}}
