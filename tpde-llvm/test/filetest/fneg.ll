; NOTE: Assertions have been autogenerated by utils/update_tpde_llvm_test_checks.py UTC_ARGS: --tool tpde_llvm --default-march x86-64-v2 --filter-out "int3" --version 5
; SPDX-FileCopyrightText: 2024 Tobias Schwarz <tobias.schwarz@tum.de>
;
; SPDX-License-Identifier: LicenseRef-Proprietary

; RUN: tpde_llvm %s | llvm-objdump -d -r --no-show-raw-insn --symbolize-operands --no-addresses --x86-asm-syntax=intel --section=.text --section=.rodata - | FileCheck %s -check-prefixes=X64,CHECK --enable-var-scope --dump-input always
; RUN: tpde_llvm --target=aarch64 %s | llvm-objdump -d -r --no-show-raw-insn --symbolize-operands --no-addresses - | FileCheck %s -check-prefixes=ARM64,CHECK --enable-var-scope --dump-input always

define float @fnegf32(float %0) {
; X64-LABEL: fnegf32>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x30
; X64:    xorps xmm0, xmmword ptr <fnegf32+0x14>
; X64:     R_X86_64_PC32 -0x4
; X64:    add rsp, 0x30
; X64:    pop rbp
; X64:    ret
; X64:    nop word ptr [rax + rax]
; X64:    nop word ptr [rax + rax]
;
; ARM64-LABEL: fnegf32>:
; ARM64:    sub sp, sp, #0xb0
; ARM64:    stp x29, x30, [sp]
; ARM64:    mov x29, sp
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    fneg s0, s0
; ARM64:    ldp x29, x30, [sp]
; ARM64:    add sp, sp, #0xb0
; ARM64:    ret
; ARM64:     ...
entry:
  %1 = fneg float %0
  ret float %1
}

define double @fnegf64(double %0) {
; X64-LABEL: fnegf64>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x40
; X64:    xorps xmm0, xmmword ptr <fnegf64+0x14>
; X64:     R_X86_64_PC32 -0x4
; X64:    add rsp, 0x40
; X64:    pop rbp
; X64:    ret
; X64:    nop word ptr [rax + rax]
; X64:    nop dword ptr [rax]
; X64:     ...
; X64:    add byte ptr [rax], al
; X64:    <unknown>
;
; ARM64-LABEL: fnegf64>:
; ARM64:    sub sp, sp, #0xb0
; ARM64:    stp x29, x30, [sp]
; ARM64:    mov x29, sp
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    fneg d0, d0
; ARM64:    ldp x29, x30, [sp]
; ARM64:    add sp, sp, #0xb0
; ARM64:    ret
; ARM64:     ...
entry:
  %1 = fneg double %0
  ret double %1
}
;; NOTE: These prefixes are unused and the list is autogenerated. Do not add tests below this line:
; CHECK: {{.*}}
