; NOTE: Assertions have been autogenerated by utils/update_tpde_llvm_test_checks.py UTC_ARGS: --tool tpde_llvm --default-march x86-64-v2 --filter-out "int3" --version 5
; SPDX-FileCopyrightText: 2024 Tobias Schwarz <tobias.schwarz@tum.de>
;
; SPDX-License-Identifier: LicenseRef-Proprietary

; RUN: tpde_llvm %s | llvm-objdump -d -r --no-show-raw-insn --symbolize-operands --no-addresses --x86-asm-syntax=intel - | FileCheck %s -check-prefixes=X64,CHECK --enable-var-scope --dump-input always
; RUN: tpde_llvm --target=aarch64 %s | llvm-objdump -d -r --no-show-raw-insn --symbolize-operands --no-addresses - | FileCheck %s -check-prefixes=ARM64,CHECK --enable-var-scope --dump-input always

declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32 immarg)

define void @prefetch_read_local0_inst(ptr %0) {
; X64-LABEL: prefetch_read_local0_inst>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x30
; X64:    prefetchnta byte ptr [rdi]
; X64:    add rsp, 0x30
; X64:    pop rbp
; X64:    ret
; X64:    nop dword ptr [rax]
;
; ARM64-LABEL: prefetch_read_local0_inst>:
; ARM64:    sub sp, sp, #0xb0
; ARM64:    stp x29, x30, [sp]
; ARM64:    mov x29, sp
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    prfm pldl1strm, [x0]
; ARM64:    ldp x29, x30, [sp]
; ARM64:    add sp, sp, #0xb0
; ARM64:    ret
; ARM64:     ...
  entry:
    call void @llvm.prefetch.p0(ptr %0, i32 0, i32 0, i32 0)
    ret void
}

define void @prefetch_read_local1_inst(ptr %0) {
; X64-LABEL: prefetch_read_local1_inst>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x30
; X64:    prefetcht2 byte ptr [rdi]
; X64:    add rsp, 0x30
; X64:    pop rbp
; X64:    ret
; X64:    nop dword ptr [rax]
;
; ARM64-LABEL: prefetch_read_local1_inst>:
; ARM64:    sub sp, sp, #0xb0
; ARM64:    stp x29, x30, [sp]
; ARM64:    mov x29, sp
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    prfm pldl3keep, [x0]
; ARM64:    ldp x29, x30, [sp]
; ARM64:    add sp, sp, #0xb0
; ARM64:    ret
; ARM64:     ...
  entry:
    call void @llvm.prefetch.p0(ptr %0, i32 0, i32 1, i32 0)
    ret void
}

define void @prefetch_read_local2_inst(ptr %0) {
; X64-LABEL: prefetch_read_local2_inst>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x30
; X64:    prefetcht1 byte ptr [rdi]
; X64:    add rsp, 0x30
; X64:    pop rbp
; X64:    ret
; X64:    nop dword ptr [rax]
;
; ARM64-LABEL: prefetch_read_local2_inst>:
; ARM64:    sub sp, sp, #0xb0
; ARM64:    stp x29, x30, [sp]
; ARM64:    mov x29, sp
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    prfm pldl2keep, [x0]
; ARM64:    ldp x29, x30, [sp]
; ARM64:    add sp, sp, #0xb0
; ARM64:    ret
; ARM64:     ...
  entry:
    call void @llvm.prefetch.p0(ptr %0, i32 0, i32 2, i32 0)
    ret void
}

define void @prefetch_read_local3_inst(ptr %0) {
; X64-LABEL: prefetch_read_local3_inst>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x30
; X64:    prefetcht0 byte ptr [rdi]
; X64:    add rsp, 0x30
; X64:    pop rbp
; X64:    ret
; X64:    nop dword ptr [rax]
;
; ARM64-LABEL: prefetch_read_local3_inst>:
; ARM64:    sub sp, sp, #0xb0
; ARM64:    stp x29, x30, [sp]
; ARM64:    mov x29, sp
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    prfm pldl1keep, [x0]
; ARM64:    ldp x29, x30, [sp]
; ARM64:    add sp, sp, #0xb0
; ARM64:    ret
; ARM64:     ...
  entry:
    call void @llvm.prefetch.p0(ptr %0, i32 0, i32 3, i32 0)
    ret void
}

define void @prefetch_write_local0_inst(ptr %0) {
; X64-LABEL: prefetch_write_local0_inst>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x30
; X64:    prefetchnta byte ptr [rdi]
; X64:    add rsp, 0x30
; X64:    pop rbp
; X64:    ret
; X64:    nop dword ptr [rax]
;
; ARM64-LABEL: prefetch_write_local0_inst>:
; ARM64:    sub sp, sp, #0xb0
; ARM64:    stp x29, x30, [sp]
; ARM64:    mov x29, sp
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    prfm pstl1strm, [x0]
; ARM64:    ldp x29, x30, [sp]
; ARM64:    add sp, sp, #0xb0
; ARM64:    ret
; ARM64:     ...
  entry:
    call void @llvm.prefetch.p0(ptr %0, i32 1, i32 0, i32 0)
    ret void
}

define void @prefetch_write_local1_inst(ptr %0) {
; X64-LABEL: prefetch_write_local1_inst>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x30
; X64:    prefetcht2 byte ptr [rdi]
; X64:    add rsp, 0x30
; X64:    pop rbp
; X64:    ret
; X64:    nop dword ptr [rax]
;
; ARM64-LABEL: prefetch_write_local1_inst>:
; ARM64:    sub sp, sp, #0xb0
; ARM64:    stp x29, x30, [sp]
; ARM64:    mov x29, sp
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    prfm pstl3keep, [x0]
; ARM64:    ldp x29, x30, [sp]
; ARM64:    add sp, sp, #0xb0
; ARM64:    ret
; ARM64:     ...
  entry:
    call void @llvm.prefetch.p0(ptr %0, i32 1, i32 1, i32 0)
    ret void
}

define void @prefetch_write_local2_inst(ptr %0) {
; X64-LABEL: prefetch_write_local2_inst>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x30
; X64:    prefetcht1 byte ptr [rdi]
; X64:    add rsp, 0x30
; X64:    pop rbp
; X64:    ret
; X64:    nop dword ptr [rax]
;
; ARM64-LABEL: prefetch_write_local2_inst>:
; ARM64:    sub sp, sp, #0xb0
; ARM64:    stp x29, x30, [sp]
; ARM64:    mov x29, sp
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    prfm pstl2keep, [x0]
; ARM64:    ldp x29, x30, [sp]
; ARM64:    add sp, sp, #0xb0
; ARM64:    ret
; ARM64:     ...
  entry:
    call void @llvm.prefetch.p0(ptr %0, i32 1, i32 2, i32 0)
    ret void
}

define void @prefetch_write_local3_inst(ptr %0) {
; X64-LABEL: prefetch_write_local3_inst>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x30
; X64:    prefetcht0 byte ptr [rdi]
; X64:    add rsp, 0x30
; X64:    pop rbp
; X64:    ret
; X64:    nop dword ptr [rax]
;
; ARM64-LABEL: prefetch_write_local3_inst>:
; ARM64:    sub sp, sp, #0xb0
; ARM64:    stp x29, x30, [sp]
; ARM64:    mov x29, sp
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    prfm pstl1keep, [x0]
; ARM64:    ldp x29, x30, [sp]
; ARM64:    add sp, sp, #0xb0
; ARM64:    ret
; ARM64:     ...
  entry:
    call void @llvm.prefetch.p0(ptr %0, i32 1, i32 3, i32 0)
    ret void
}



define void @prefetch_read_local0_data(ptr %0) {
; X64-LABEL: prefetch_read_local0_data>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x30
; X64:    prefetchnta byte ptr [rdi]
; X64:    add rsp, 0x30
; X64:    pop rbp
; X64:    ret
; X64:    nop dword ptr [rax]
;
; ARM64-LABEL: prefetch_read_local0_data>:
; ARM64:    sub sp, sp, #0xb0
; ARM64:    stp x29, x30, [sp]
; ARM64:    mov x29, sp
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    prfm pldl1strm, [x0]
; ARM64:    ldp x29, x30, [sp]
; ARM64:    add sp, sp, #0xb0
; ARM64:    ret
; ARM64:     ...
  entry:
    call void @llvm.prefetch.p0(ptr %0, i32 0, i32 0, i32 1)
    ret void
}

define void @prefetch_read_local1_data(ptr %0) {
; X64-LABEL: prefetch_read_local1_data>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x30
; X64:    prefetcht2 byte ptr [rdi]
; X64:    add rsp, 0x30
; X64:    pop rbp
; X64:    ret
; X64:    nop dword ptr [rax]
;
; ARM64-LABEL: prefetch_read_local1_data>:
; ARM64:    sub sp, sp, #0xb0
; ARM64:    stp x29, x30, [sp]
; ARM64:    mov x29, sp
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    prfm pldl3keep, [x0]
; ARM64:    ldp x29, x30, [sp]
; ARM64:    add sp, sp, #0xb0
; ARM64:    ret
; ARM64:     ...
  entry:
    call void @llvm.prefetch.p0(ptr %0, i32 0, i32 1, i32 1)
    ret void
}

define void @prefetch_read_local2_data(ptr %0) {
; X64-LABEL: prefetch_read_local2_data>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x30
; X64:    prefetcht1 byte ptr [rdi]
; X64:    add rsp, 0x30
; X64:    pop rbp
; X64:    ret
; X64:    nop dword ptr [rax]
;
; ARM64-LABEL: prefetch_read_local2_data>:
; ARM64:    sub sp, sp, #0xb0
; ARM64:    stp x29, x30, [sp]
; ARM64:    mov x29, sp
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    prfm pldl2keep, [x0]
; ARM64:    ldp x29, x30, [sp]
; ARM64:    add sp, sp, #0xb0
; ARM64:    ret
; ARM64:     ...
  entry:
    call void @llvm.prefetch.p0(ptr %0, i32 0, i32 2, i32 1)
    ret void
}

define void @prefetch_read_local3_data(ptr %0) {
; X64-LABEL: prefetch_read_local3_data>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x30
; X64:    prefetcht0 byte ptr [rdi]
; X64:    add rsp, 0x30
; X64:    pop rbp
; X64:    ret
; X64:    nop dword ptr [rax]
;
; ARM64-LABEL: prefetch_read_local3_data>:
; ARM64:    sub sp, sp, #0xb0
; ARM64:    stp x29, x30, [sp]
; ARM64:    mov x29, sp
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    prfm pldl1keep, [x0]
; ARM64:    ldp x29, x30, [sp]
; ARM64:    add sp, sp, #0xb0
; ARM64:    ret
; ARM64:     ...
  entry:
    call void @llvm.prefetch.p0(ptr %0, i32 0, i32 3, i32 1)
    ret void
}


define void @prefetch_write_local0_data(ptr %0) {
; X64-LABEL: prefetch_write_local0_data>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x30
; X64:    prefetchnta byte ptr [rdi]
; X64:    add rsp, 0x30
; X64:    pop rbp
; X64:    ret
; X64:    nop dword ptr [rax]
;
; ARM64-LABEL: prefetch_write_local0_data>:
; ARM64:    sub sp, sp, #0xb0
; ARM64:    stp x29, x30, [sp]
; ARM64:    mov x29, sp
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    prfm pstl1strm, [x0]
; ARM64:    ldp x29, x30, [sp]
; ARM64:    add sp, sp, #0xb0
; ARM64:    ret
; ARM64:     ...
  entry:
    call void @llvm.prefetch.p0(ptr %0, i32 1, i32 0, i32 1)
    ret void
}

define void @prefetch_write_local1_data(ptr %0) {
; X64-LABEL: prefetch_write_local1_data>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x30
; X64:    prefetcht2 byte ptr [rdi]
; X64:    add rsp, 0x30
; X64:    pop rbp
; X64:    ret
; X64:    nop dword ptr [rax]
;
; ARM64-LABEL: prefetch_write_local1_data>:
; ARM64:    sub sp, sp, #0xb0
; ARM64:    stp x29, x30, [sp]
; ARM64:    mov x29, sp
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    prfm pstl3keep, [x0]
; ARM64:    ldp x29, x30, [sp]
; ARM64:    add sp, sp, #0xb0
; ARM64:    ret
; ARM64:     ...
  entry:
    call void @llvm.prefetch.p0(ptr %0, i32 1, i32 1, i32 1)
    ret void
}

define void @prefetch_write_local2_data(ptr %0) {
; X64-LABEL: prefetch_write_local2_data>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x30
; X64:    prefetcht1 byte ptr [rdi]
; X64:    add rsp, 0x30
; X64:    pop rbp
; X64:    ret
; X64:    nop dword ptr [rax]
;
; ARM64-LABEL: prefetch_write_local2_data>:
; ARM64:    sub sp, sp, #0xb0
; ARM64:    stp x29, x30, [sp]
; ARM64:    mov x29, sp
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    prfm pstl2keep, [x0]
; ARM64:    ldp x29, x30, [sp]
; ARM64:    add sp, sp, #0xb0
; ARM64:    ret
; ARM64:     ...
  entry:
    call void @llvm.prefetch.p0(ptr %0, i32 1, i32 2, i32 1)
    ret void
}

define void @prefetch_write_local3_data(ptr %0) {
; X64-LABEL: prefetch_write_local3_data>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x30
; X64:    prefetcht0 byte ptr [rdi]
; X64:    add rsp, 0x30
; X64:    pop rbp
; X64:    ret
; X64:    nop word ptr [rax + rax]
; X64:    nop dword ptr [rax]
; X64:     ...
; X64:    add byte ptr [rax], al
; X64:    <unknown>
;
; ARM64-LABEL: prefetch_write_local3_data>:
; ARM64:    sub sp, sp, #0xb0
; ARM64:    stp x29, x30, [sp]
; ARM64:    mov x29, sp
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    nop
; ARM64:    prfm pstl1keep, [x0]
; ARM64:    ldp x29, x30, [sp]
; ARM64:    add sp, sp, #0xb0
; ARM64:    ret
; ARM64:     ...
  entry:
    call void @llvm.prefetch.p0(ptr %0, i32 1, i32 3, i32 1)
    ret void
}
;; NOTE: These prefixes are unused and the list is autogenerated. Do not add tests below this line:
; CHECK: {{.*}}
