; NOTE: Assertions have been autogenerated by utils/update_tpde_llvm_test_checks.py UTC_ARGS: --tool tpde_llvm --default-march x86-64-v2 --filter-out "int3" --version 5
; SPDX-FileCopyrightText: 2024 Tobias Schwarz <tobias.schwarz@tum.de>
;
; SPDX-License-Identifier: LicenseRef-Proprietary

; RUN: tpde_llvm %s | llvm-objdump -d -r --no-show-raw-insn --symbolize-operands --no-addresses --x86-asm-syntax=intel - | FileCheck %s -check-prefixes=X64,CHECK --enable-var-scope --dump-input always


define i32 @select_i32_reg(i1 %0, i32 %1, i32 %2) {
; X64-LABEL: select_i32_reg>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x40
; X64:    test dil, 0x1
; X64:    cmove esi, edx
; X64:    mov eax, esi
; X64:    add rsp, 0x40
; X64:    pop rbp
; X64:    ret
; X64:    add byte ptr [rbp + 0x48], dl
  entry:
    %3 = select i1 %0, i32 %1, i32 %2
    ret i32 %3
}

define i64 @select_i64_reg(i1 %0, i64 %1, i64 %2) {
; X64-LABEL: select_i64_reg>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x50
; X64:    test dil, 0x1
; X64:    cmove rsi, rdx
; X64:    mov rax, rsi
; X64:    add rsp, 0x50
; X64:    pop rbp
; X64:    ret
; X64:     ...
; X64:    add byte ptr [rax], al
; X64:    add byte ptr [rbp + 0x48], dl
  entry:
    %3 = select i1 %0, i64 %1, i64 %2
    ret i64 %3
}


define ptr @select_ptr_reg(i1 %0, ptr %1, ptr %2) {
; X64-LABEL: select_ptr_reg>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x50
; X64:    test dil, 0x1
; X64:    cmove rsi, rdx
; X64:    mov rax, rsi
; X64:    add rsp, 0x50
; X64:    pop rbp
; X64:    ret
; X64:     ...
; X64:    add byte ptr [rax], al
; X64:    add byte ptr [rbp + 0x48], dl
  entry:
    %3 = select i1 %0, ptr %1, ptr %2
    ret ptr %3
}

define i128 @select_i128_reg(i1 %0, i128 %1, i128 %2) {
; X64-LABEL: select_i128_reg>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    push rbx
; X64:    nop dword ptr [rax + rax]
; X64:    sub rsp, 0x58
; X64:    test dil, 0x1
; X64:    mov rax, rsi
; X64:    cmove rax, rcx
; X64:    mov rbx, rdx
; X64:    cmove rbx, r8
; X64:    mov rdx, rbx
; X64:    add rsp, 0x58
; X64:    pop rbx
; X64:    pop rbp
; X64:    ret
; X64:    add byte ptr [rax], al
; X64:    add byte ptr [rax], al
; X64:    add byte ptr [rbp + 0x48], dl
  entry:
    %3 = select i1 %0, i128 %1, i128 %2
    ret i128 %3
}

define float @select_f32_reg(i1 %0, float %1, float %2) {
; X64-LABEL: select_f32_reg>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x40
; X64:    test dil, 0x1
; X64:    je <L0>
; X64:    movupd xmm1, xmm0
; X64:  <L0>:
; X64:    movupd xmm0, xmm1
; X64:    add rsp, 0x40
; X64:    pop rbp
; X64:    ret
; X64:     ...
  entry:
    %3 = select i1 %0, float %1, float %2
    ret float %3
}

define double @select_f64_reg(i1 %0, double %1, double %2) {
; X64-LABEL: select_f64_reg>:
; X64:    push rbp
; X64:    mov rbp, rsp
; X64:    nop word ptr [rax + rax]
; X64:    sub rsp, 0x50
; X64:    test dil, 0x1
; X64:    je <L0>
; X64:    movupd xmm1, xmm0
; X64:  <L0>:
; X64:    movupd xmm0, xmm1
; X64:    add rsp, 0x50
; X64:    pop rbp
; X64:    ret
; X64:     ...
  entry:
    %3 = select i1 %0, double %1, double %2
    ret double %3
}
;; NOTE: These prefixes are unused and the list is autogenerated. Do not add tests below this line:
; CHECK: {{.*}}
