; SPDX-FileCopyrightText: 2024 Tobias Schwarz <tobias.schwarz@tum.de>
;
; SPDX-License-Identifier: LicenseRef-Proprietary

; RUN: rm -rf %t
; RUN: mkdir %t

; RUN: %tpde_test %s --no-fixed-assignments -o %t/simple_ret.o
; RUN: objdump -Mintel-syntax --no-addresses --no-show-raw-insn --disassemble %t/simple_ret.o | FileCheck %s -check-prefixes=X64,CHECK --enable-var-scope --dump-input always
; RUN: %tpde_test %s --no-fixed-assignments --arch=a64 -o %t/simple_ret.o
; RUN: llvm-objdump -d -r --no-show-raw-insn --symbolize-operands --no-addresses %t/simple_ret.o | FileCheck %s -check-prefixes=A64,CHECK --enable-var-scope --dump-input always

; CHECK-LABEL: empty
empty() {
entry:
; X64: push rbp
; X64-NEXT: mov rbp,rsp
; X64-NEXT: nop
; X64: sub rsp,0x30
; X64-NEXT: add rsp,0x30
; X64-NEXT: pop rbp
; X64-NEXT: ret

; A64: sub sp, sp
; A64-NEXT: stp x29, x30, [sp]
; A64-NEXT: mov x29, sp
; A64: ldp x29, x30, [sp]
; A64-NEXT: add sp, sp
; A64-NEXT: ret
  terminate
}

; CHECK-LABEL: simple_ret
simple_ret(%a, %b) {
entry:
; X64: sub rsp,0x30
; X64-NEXT: mov rax,rsi
; X64: add rsp,0x30

; A64: sub sp, sp
; A64-NEXT: stp x29, x30, [sp]
; A64-NEXT: mov x29, sp
; A64: mov x0, x1
; A64: ldp x29, x30, [sp]
; A64-NEXT: add sp, sp
; A64-NEXT: ret
  terminate %b
}